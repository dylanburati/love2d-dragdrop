Items = {
    { name = "append", pos = {}, },
    { name = "as_mut_ptr", pos = {}, },
    { name = "as_mut_ptr_range", pos = {}, },
    { name = "as_mut_slice", pos = {}, },
    { name = "as_ptr", pos = {}, },
    { name = "as_ptr_range", pos = {}, },
    { name = "as_slice", pos = {}, },
    { name = "binary_search_by_key", pos = {}, },
    { name = "binary_search_by", pos = {}, },
    { name = "binary_search", pos = {}, },
    { name = "capacity", pos = {}, },
    { name = "chunk_by_mut", pos = {}, },
    { name = "chunk_by", pos = {}, },
    { name = "chunks_exact_mut", pos = {}, },
    { name = "chunks_exact", pos = {}, },
    { name = "chunks_mut", pos = {}, },
    { name = "chunks", pos = {}, },
    { name = "clear", pos = {}, },
    { name = "clone_from_slice", pos = {}, },
    { name = "concat", pos = {}, },
    { name = "connect", pos = {}, },
    { name = "contains", pos = {}, },
    { name = "copy_from_slice", pos = {}, },
    { name = "copy_within", pos = {}, },
    { name = "dedup_by_key", pos = {}, },
    { name = "dedup_by", pos = {}, },
    { name = "dedup", pos = {}, },
    { name = "drain", pos = {}, },
    { name = "ends_with", pos = {}, },
    { name = "extend_from_slice", pos = {}, },
    { name = "extend_from_within", pos = {}, },
    { name = "extract_if", pos = {}, },
    { name = "fill", pos = {}, },
    { name = "fill_with", pos = {}, },
    { name = "first_chunk_mut", pos = {}, },
    { name = "first_chunk", pos = {}, },
    { name = "first_mut", pos = {}, },
    { name = "first", pos = {}, },
    { name = "get_disjoint_mut", pos = {}, },
    { name = "get_mut", pos = {}, },
    { name = "get", pos = {}, },
    { name = "insert", pos = {}, },
    { name = "into_boxed_slice", pos = {}, },
    { name = "into_flattened", pos = {}, },
    { name = "is_empty", pos = {}, },
    { name = "is_sorted_by_key", pos = {}, },
    { name = "is_sorted_by", pos = {}, },
    { name = "is_sorted", pos = {}, },
    { name = "iter_mut", pos = {}, },
    { name = "iter", pos = {}, },
    { name = "join", pos = {}, },
    { name = "last_chunk_mut", pos = {}, },
    { name = "last_chunk", pos = {}, },
    { name = "last_mut", pos = {}, },
    { name = "last", pos = {}, },
    { name = "leak", pos = {}, },
    { name = "len", pos = {}, },
    { name = "new", pos = {}, },
    { name = "partition_point", pos = {}, },
    { name = "pop_if", pos = {}, },
    { name = "pop", pos = {}, },
    { name = "push", pos = {}, },
    { name = "rchunks_exact_mut", pos = {}, },
    { name = "rchunks_exact", pos = {}, },
    { name = "rchunks_mut", pos = {}, },
    { name = "rchunks", pos = {}, },
    { name = "remove", pos = {}, },
    { name = "repeat", pos = {}, },
    { name = "reserve_exact", pos = {}, },
    { name = "reserve", pos = {}, },
    { name = "resize", pos = {}, },
    { name = "resize_with", pos = {}, },
    { name = "retain_mut", pos = {}, },
    { name = "retain", pos = {}, },
    { name = "reverse", pos = {}, },
    { name = "rotate_left", pos = {}, },
    { name = "rotate_right", pos = {}, },
    { name = "rsplit_mut", pos = {}, },
    { name = "rsplitn_mut", pos = {}, },
    { name = "rsplitn", pos = {}, },
    { name = "rsplit", pos = {}, },
    { name = "select_nth_unstable_by_key", pos = {}, },
    { name = "select_nth_unstable_by", pos = {}, },
    { name = "select_nth_unstable", pos = {}, },
    { name = "shrink_to_fit", pos = {}, },
    { name = "shrink_to", pos = {}, },
    { name = "sort_by_cached_key", pos = {}, },
    { name = "sort_by_key", pos = {}, },
    { name = "sort_by", pos = {}, },
    { name = "sort", pos = {}, },
    { name = "sort_unstable_by_key", pos = {}, },
    { name = "sort_unstable_by", pos = {}, },
    { name = "sort_unstable", pos = {}, },
    { name = "spare_capacity_mut", pos = {}, },
    { name = "splice", pos = {}, },
    { name = "split_at_checked", pos = {}, },
    { name = "split_at_mut_checked", pos = {}, },
    { name = "split_at_mut", pos = {}, },
    { name = "split_at", pos = {}, },
    { name = "split_first_chunk_mut", pos = {}, },
    { name = "split_first_chunk", pos = {}, },
    { name = "split_first_mut", pos = {}, },
    { name = "split_first", pos = {}, },
    { name = "split_inclusive_mut", pos = {}, },
    { name = "split_inclusive", pos = {}, },
    { name = "split_last_chunk_mut", pos = {}, },
    { name = "split_last_chunk", pos = {}, },
    { name = "split_last_mut", pos = {}, },
    { name = "split_last", pos = {}, },
    { name = "split_mut", pos = {}, },
    { name = "splitn_mut", pos = {}, },
    { name = "splitn", pos = {}, },
    { name = "split_off_first_mut", pos = {}, },
    { name = "split_off_first", pos = {}, },
    { name = "split_off_last_mut", pos = {}, },
    { name = "split_off_last", pos = {}, },
    { name = "split_off_mut", pos = {}, },
    { name = "split_off", pos = {}, },
    { name = "split", pos = {}, },
    { name = "starts_with", pos = {}, },
    { name = "strip_prefix", pos = {}, },
    { name = "strip_suffix", pos = {}, },
    { name = "swap", pos = {}, },
    { name = "swap_remove", pos = {}, },
    { name = "swap_with_slice", pos = {}, },
    { name = "to_vec", pos = {}, },
    { name = "truncate", pos = {}, },
    { name = "try_reserve_exact", pos = {}, },
    { name = "try_reserve", pos = {}, },
    { name = "windows", pos = {}, },
    { name = "with_capacity", pos = {}, },
}

function writeItem(f, item)
    f:write("{ name = ")
    f:write(string.format("%q", item.name))
    f:write(", pos = {")
    for _, value in ipairs(item.pos) do
        f:write("{ v = ")
        f:write(value.v)
        f:write(", x = ")
        f:write(value.x)
        f:write(", y = ")
        f:write(value.y)
        f:write(" }, ")
    end
    f:write("}")
end
